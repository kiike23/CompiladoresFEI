// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.Fixed fixed1;
    
    private Gtk.Entry entry1;
    
    private Gtk.Button button1;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("MainWindow");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.fixed1 = new Gtk.Fixed();
        this.fixed1.Name = "fixed1";
        this.fixed1.HasWindow = false;
        // Container child fixed1.Gtk.Fixed+FixedChild
        this.entry1 = new Gtk.Entry();
        this.entry1.CanFocus = true;
        this.entry1.Name = "entry1";
        this.entry1.IsEditable = true;
        this.entry1.InvisibleChar = 'â€¢';
        this.fixed1.Add(this.entry1);
        Gtk.Fixed.FixedChild w1 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.entry1]));
        w1.X = 37;
        w1.Y = 44;
        // Container child fixed1.Gtk.Fixed+FixedChild
        this.button1 = new Gtk.Button();
        this.button1.CanFocus = true;
        this.button1.Name = "button1";
        this.button1.UseUnderline = true;
        this.button1.Label = Mono.Unix.Catalog.GetString("GtkButton");
        this.fixed1.Add(this.button1);
        Gtk.Fixed.FixedChild w2 = ((Gtk.Fixed.FixedChild)(this.fixed1[this.button1]));
        w2.X = 221;
        w2.Y = 42;
        this.Add(this.fixed1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 400;
        this.DefaultHeight = 320;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
    }
}
